// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Qynon.AdventureWorks.Infrastructure.Data;

namespace Qynon.AdventureWorks.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230228185616_HistoricoCorridaMigration")]
    partial class HistoricoCorridaMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Qynon.AdventureWorks.Models.Competidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<double>("Altura")
                        .HasColumnType("double precision")
                        .HasColumnName("altura");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("nome");

                    b.Property<double>("Peso")
                        .HasColumnType("double precision")
                        .HasColumnName("peso");

                    b.Property<char>("Sexo")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasColumnName("sexo");

                    b.Property<double>("TemperaturaMediaCorpo")
                        .HasColumnType("double precision")
                        .HasColumnName("temperaturamediacorpo");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("competidores");
                });

            modelBuilder.Entity("Qynon.AdventureWorks.Models.HistoricoCorrida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("CompetidorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCorrida")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PistaCorridaId")
                        .HasColumnType("integer");

                    b.Property<double>("TempoGasto")
                        .HasColumnType("double precision");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("CompetidorId");

                    b.HasIndex("PistaCorridaId");

                    b.ToTable("historicocorrida");
                });

            modelBuilder.Entity("Qynon.AdventureWorks.Models.PistaCorrida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("descricao");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("pistacorrida");
                });

            modelBuilder.Entity("Qynon.AdventureWorks.Models.HistoricoCorrida", b =>
                {
                    b.HasOne("Qynon.AdventureWorks.Models.Competidor", "Competidor")
                        .WithMany("HistoricoCorridas")
                        .HasForeignKey("CompetidorId")
                        .HasConstraintName("fk_competidor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Qynon.AdventureWorks.Models.PistaCorrida", "PistaCorrida")
                        .WithMany("HistoricoCorridas")
                        .HasForeignKey("PistaCorridaId")
                        .HasConstraintName("fk_pista_corrida")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competidor");

                    b.Navigation("PistaCorrida");
                });

            modelBuilder.Entity("Qynon.AdventureWorks.Models.Competidor", b =>
                {
                    b.Navigation("HistoricoCorridas");
                });

            modelBuilder.Entity("Qynon.AdventureWorks.Models.PistaCorrida", b =>
                {
                    b.Navigation("HistoricoCorridas");
                });
#pragma warning restore 612, 618
        }
    }
}
